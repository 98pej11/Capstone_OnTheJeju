buildscript {//querydsl을 위해 추가 부분
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'org.springframework.boot' version '2.6.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'

    //querydsl 추가
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"

    id 'java'

//    //자바 컨벤션
//    id 'org.ec4j.editorconfig' version '0.0.3'
//    id 'checkstyle'

}
//
//editorconfig {
//    excludes = ['build']
//}
//checkstyle {
//    maxWarnings = 0
//    configFile = file("${rootDir}/naver-checkstyle-rules.xml") //// 규칙이 어긋나는 코드가 하나라도 있을 경우 빌드 fail을 내고 싶다면 이 선언을 추가한다.
//    configProperties = ["suppressionFile": "${rootDir}/naver-checkstyle-suppressions.xml"]
//    toolVersion = "9.2" // checkstyle 버전 8.24 이상 선언
//
//}
//
//check.dependsOn editorconfigCheck
//
//compileJava.options.encoding = 'UTF-8'
//compileTestJava.options.encoding = 'UTF-8'


group = 'capstone'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    //쿼리 출력 중 ? 부분 자세한 설명 보여줌
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.8'
    //validation 관련 라이브러리
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    //재실행 없이 뷰파일 볼수 있음
    implementation 'org.springframework.boot:spring-boot-devtools'
    //querydsl 추가
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"
    //thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    //spring security 에서 jwt 사용, 2번째는 jwt 형식의 토큰 발행 및 검증에 필요한 모듈
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    //테스트 코드에 롬복 가능하게
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    //mysql 연결
    //implementation 'mysql:mysql-connector-java'

    //redis 의존성
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    // 만약 test 이외에도 embedded 사용하고 싶은 경우
    implementation('it.ozimov:embedded-redis:0.7.3') {
        exclude group: 'org.slf4j', module: 'slf4j-simple'
    }
    //test를 위한 embedded redis//이거 하면 테스트 코드에서 slfj 중복 에러남!!
    //testImplementation group: 'it.ozimov', name: 'embedded-redis', version: '0.7.2'


    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}


//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
//querydsl 추가 끝
